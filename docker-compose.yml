version: "3"

services:
  # --------------------------------------#
  #               Clickhouse              #
  # --------------------------------------#
  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: gdelt-analytics-etl-clickhouse
    ports:
      - "38123:8123"
      - "39000:9000"
    volumes:
      - ./.docker-data/clickhouse:/var/lib/clickhouse
    environment:
      - CLICKHOUSE_USER=admin
      - CLICKHOUSE_PASSWORD=password
      - CLICKHOUSE_DATABASE=default

  # --------------------------------------#
  #               Metabase                #
  # --------------------------------------#
  metabase:
    image: metabase/metabase:v0.46.1
    container_name: gdelt-analytics-etl-metabase
    depends_on:
      - clickhouse
    ports:
      - "3000:3000"
    volumes:
      - ./.docker-data/metabase-data-plugins:/plugins"

  # --------------------------------------#
  #               Minio                   #
  # --------------------------------------#
  minio:
    image: minio/minio:latest
    container_name: gdelt-analytics-etl-minio

    command: server --console-address ":9090"
    ports:
      - "39090:9090"
      - "39191:9000"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_VOLUMES=/mnt/data
    volumes:
      - ./.docker-data/minio:/mnt/data"

  # --------------------------------------#
  #               Postgres                #
  # --------------------------------------#
  postgres:
    image: postgres:14
    command:
      - postgres
      - -c
      - max_connections=150
    environment:
      POSTGRES_USER: prefect
      POSTGRES_PASSWORD: prefect_password
      POSTGRES_DB: prefect_server
    healthcheck:
      interval: 10s
      retries: 60
      start_period: 2s
      test: pg_isready -q -d $${POSTGRES_DB} -U $${POSTGRES_USER} | grep "accepting connections" || exit 1
      timeout: 2s
    ports:
      - published: 5433
        target: 5432
    restart: on-failure
    volumes:
      - ./.docker-data/postgres:/var/lib/postgresql/data
    networks:
      - prefect
  # --------------------------------------#
  #             Prefect Server            #
  # --------------------------------------#
  prefect-server:
    image: prefecthq/prefect:2-python3.10
    command:
      - prefect
      - server
      - start
    ports:
      - 4200:4200
    depends_on:
      postgres:
        condition: service_started
    volumes:
      - ./.docker-data/volumes/prefect:/root/.prefect
      - ./.docker-data/flows:/flows
    environment:
      PREFECT_ORION_API_HOST: 0.0.0.0
      PREFECT_ORION_DATABASE_CONNECTION_URL: postgresql+asyncpg://prefect:prefect_password@postgres:5432/prefect_server
      PREFECT_ORION_ANALYTICS_ENABLED: "false"
      PREFECT_LOGGING_SERVER_LEVEL: WARNING
      PREFECT_API_URL: http://127.0.0.1:4200/api
    networks:
      - prefect
  # --------------------------------------#
  #            Prefect Docker Agent              #
  # --------------------------------------#
  prefect-agent:
    image: prefecthq/prefect:2-python3.10
    command:
      - prefect
      - agent
      - start
      - -q
      - default
    depends_on:
      prefect-server:
        condition: service_started
    environment:
      PREFECT_API_URL: http://prefect-server:4200/api
      PREFECT_LOGGING_LEVEL: DEBUG
      DOCKER_HOST: unix://var/run/docker.sock
      EXTRA_PIP_PACKAGES: "pandas clickhouse-connect==0.5.18 clickhouse-driver==0.2.5 minio prefect_dask requests dbt-core==1.4.5 pyarrow fastparquet dbt-clickhouse==1.4.0 dbt-extractor==0.4.1 prefect-sqlalchemy dask[dataframe] prefect-dbt[cli] prefect-dbt prefect-shell prefect-sqlalchemy==0.2.2"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - prefect

networks:
  prefect:
    name: prefect
